From 543de272be5c557e86c15a82dfa809c6d2d1d1a3 Mon Sep 17 00:00:00 2001
From: Mimoja <git@mimoja.de>
Date: Wed, 26 Aug 2020 15:40:05 +0200
Subject: [PATCH 3/4] bluetooth: Add support for the second version acaia scale
 protocol

The acaia scales (in protocol version 2) provide a BLE Internet Protocol Support
Serice which includes an "age" characteristic. By enabeling notifications on this
characteristic we can read messages from the scale.
The scale needs to be configured to send weight, timer and battery messages if
we want them. We also need to send an identifier to the scale which supposetly
is meant to be used as an unique identifier of the calling app. We are using a
dummy value.
Furthermore if no transmission happened on the channel we need to send an heartbeat
package ensuring the scale our aliveness and keeping the connection in tact.

All Acaia specifics are encapsuled into their respective functions, the main read
loop is integrated into the atomax and decent scale functionality.

This was tested with an acaia lunar with unknown firmware version and the original
decent tablet with the most recent software.

Signed-off-by: Mimoja <git@mimoja.de>
---
 bluetooth.tcl | 138 ++++++++++++++++++++++++++++++++++++++++++++++++--
 machine.tcl   |   2 +
 2 files changed, 137 insertions(+), 3 deletions(-)

diff --git a/bluetooth.tcl b/bluetooth.tcl
index 6a653e2..f0b8690 100644
--- a/bluetooth.tcl
+++ b/bluetooth.tcl
@@ -4,6 +4,8 @@ package provide de1_bluetooth
 set ::failed_attempt_count_connecting_to_de1 0
 set ::successful_de1_connection_count 0
 
+set ::acaia_next_command 0
+
 proc userdata_append {comment cmd {vital 0} } {
 	#set cmds [ble userdata $::de1(device_handle)]
 	#lappend cmds $cmd
@@ -293,6 +295,8 @@ proc scale_tare {} {
 	 	skale_tare
  	} elseif {$::settings(scale_type) == "decentscale"} {
 	 	decentscale_tare
+	} elseif {$::settings(scale_type) == "acaiascale"} {
+		acaia_tare
  	}
 }
 
@@ -348,6 +352,8 @@ proc scale_enable_weight_notifications {} {
 	 	scale_enable_weight_notifications
  	} elseif {$::settings(scale_type) == "decentscale"} {
 	 	decentscale_enable_notifications
+	} elseif {$::settings(scale_type) == "acaiascale"} {
+		acaia_enable_weight_notifications
  	}
  }
 
@@ -377,6 +383,102 @@ proc decentscale_enable_notifications {} {
 	userdata_append "enable decent scale weight notifications" [list ble enable $::de1(scale_device_handle) $::de1(suuid_decentscale) $::sinstance($::de1(suuid_decentscale)) $::de1(cuuid_decentscale_read) $::cinstance($::de1(cuuid_decentscale_read))] 1
 }
 
+proc acaia_encode {msgType payload} {
+
+    set HEADER1 [binary decode hex "EF"];
+    set HEADER2 [binary decode hex "DD"];
+	set TYPE [binary decode hex $msgType];
+
+	# TODO calculate checksum instead of hardcofig it
+	set data "$HEADER1${HEADER2}${TYPE}[binary decode hex $payload]"
+    return $data
+}
+
+proc acaia_tare {} {
+
+	if {$::de1(scale_device_handle) == 0 || $::settings(scale_type) != "acaiascale"} {
+		return
+	}
+
+	if {[ifexists ::sinstance($::de1(suuid_acaia_ips))] == ""} {
+		error "Acaia Scale not connected, cannot send tare cmd"
+		return
+	}
+
+	set tare [acaia_encode 04  0000000000000000000000000000000000]
+
+	userdata_append "send acaia heartbeat" [list ble write $::de1(scale_device_handle) $::de1(suuid_acaia_ips) $::sinstance($::de1(suuid_acaia_ips)) $::de1(cuuid_acaia_ips_age) $::cinstance($::de1(cuuid_acaia_ips_age)) $tare] 1
+
+	# The tare is not yet confirmed to us, we can therefore assume it worked out
+	set ::de1(scale_autostop_triggered) 0
+}
+
+proc acaia_send_heartbeat {} {
+
+	if {$::de1(scale_device_handle) == 0 || $::settings(scale_type) != "acaiascale"} {
+		return
+	}
+
+	if {[ifexists ::sinstance($::de1(suuid_acaia_ips))] == ""} {
+		error "Acaia Scale not connected, cannot send heartbeat"
+		return
+	}
+	set heartbeat [acaia_encode 0B 02000200]
+
+	userdata_append "send acaia heartbeat" [list ble write $::de1(scale_device_handle) $::de1(suuid_acaia_ips) $::sinstance($::de1(suuid_acaia_ips)) $::de1(cuuid_acaia_ips_age) $::cinstance($::de1(cuuid_acaia_ips_age)) $heartbeat] 1
+
+	after 3000 acaia_send_heartbeat
+}
+
+proc acaia_send_ident {} {
+
+	if {$::de1(scale_device_handle) == 0 || $::settings(scale_type) != "acaiascale"} {
+		return
+	}
+
+	if {[ifexists ::sinstance($::de1(suuid_acaia_ips))] == ""} {
+		error "Acaia Scale not connected, cannot send app ident"
+		return
+	}
+
+	set ident [acaia_encode 0B 3031323334353637383930313233349A6D]
+
+	userdata_append "send acaia ident" [list ble write $::de1(scale_device_handle) $::de1(suuid_acaia_ips) $::sinstance($::de1(suuid_acaia_ips)) $::de1(cuuid_acaia_ips_age) $::cinstance($::de1(cuuid_acaia_ips_age)) $ident] 1
+}
+
+proc acaia_send_config {} {
+
+	if {$::de1(scale_device_handle) == 0 || $::settings(scale_type) != "acaiascale"} {
+		return
+	}
+
+	if {[ifexists ::sinstance($::de1(suuid_acaia_ips))] == ""} {
+		error "Acaia Scale not connected, cannot send app config"
+		return
+	}
+
+	set ident [acaia_encode 0C 0900010102020503041506]
+
+
+	userdata_append "send acaia comfig" [list ble write $::de1(scale_device_handle) $::de1(suuid_acaia_ips) $::sinstance($::de1(suuid_acaia_ips)) $::de1(cuuid_acaia_ips_age) $::cinstance($::de1(cuuid_acaia_ips_age)) $ident] 1
+
+}
+
+
+proc acaia_enable_weight_notifications {} {
+	if {$::de1(scale_device_handle) == 0 || $::settings(scale_type) != "acaiascale"} {
+		return
+	}
+
+	if {[ifexists ::sinstance($::de1(suuid_acaia_ips))] == ""} {
+		error "Acaia Scale not connected, cannot enable weight notifications"
+		return
+	}
+
+	userdata_append "enable acaia scale weight notifications" [list ble enable $::de1(scale_device_handle) $::de1(suuid_acaia_ips) $::sinstance($::de1(suuid_acaia_ips)) $::de1(cuuid_acaia_ips_age) $::cinstance($::de1(cuuid_acaia_ips_age))] 1
+
+}
+
 proc scale_enable_button_notifications {} {
 
 	if {$::settings(scale_type) == "atomaxskale"} {
@@ -1809,7 +1911,15 @@ proc de1_ble_handler { event data } {
 							ble_connect_to_scale
 						}
 					}
+				} elseif {[string first "ACAIA" $name] != -1} {
+					append_to_scale_bluetooth_list $address "acaiascale"
 
+					if {$address == $::settings(scale_bluetooth_address)} {
+						if {$::currently_connecting_scale_handle == 0} {
+							msg "Not currently connecting to scale, so trying now"
+							ble_connect_to_scale
+						}
+					}
 				} else {
 					#msg "-- device $name found at address $address ($data)"
 				}
@@ -1999,7 +2109,12 @@ proc de1_ble_handler { event data } {
 							after 1000 skale_enable_weight_notifications
 							after 2000 skale_enable_button_notifications
 							after 3000 skale_enable_lcd
-
+						} elseif {$::settings(scale_type) == "acaiascale"} {
+							append_to_scale_bluetooth_list $address "acaiascale"
+							acaia_send_ident
+							after 2000 acaia_enable_weight_notifications
+							after 2500 acaia_send_config
+							after 5500 acaia_send_heartbeat
 						} else {
 							error "unknown scale: '$::settings(scale_type)'"
 						}
@@ -2307,7 +2422,6 @@ proc de1_ble_handler { event data } {
 							#msg "Confirmed a00e read from DE1: '[remove_null_terminator $value]'"
 							set ::de1(wrote) 0
 							run_next_userdata_cmd
-
 						} elseif {$cuuid eq "83CDC3D4-3BA2-13FC-CC5E-106C351A9352"} {
 							# decent scale
 							parse_decent_scale_recv $value vals
@@ -2315,7 +2429,7 @@ proc de1_ble_handler { event data } {
 							
 							#set sensorweight [expr {$t1 / 10.0}]
 
-						} elseif {$cuuid eq "0000EF81-0000-1000-8000-00805F9B34FB" || $cuuid eq $::de1(cuuid_decentscale_read)} {
+						} elseif {$cuuid eq "0000EF81-0000-1000-8000-00805F9B34FB" || $cuuid eq $::de1(cuuid_decentscale_read) || $cuuid eq $::de1(cuuid_acaia_ips_age)} {
 
 							if {$cuuid eq "0000EF81-0000-1000-8000-00805F9B34FB"} {
 								# Atomax scale
@@ -2356,6 +2470,24 @@ proc de1_ble_handler { event data } {
 								} else {
 									msg "decent scale recv: [array get weightarray]"
 								}
+							} elseif {$cuuid eq $::de1(cuuid_acaia_ips_age)} {
+								# acaia scale
+								if {$::acaia_next_command == 0} {
+									binary scan $value scu header msgtype
+									set ::acaia_next_command $msgtype
+								} else {
+									binary scan $value cucusucucucucu len event_type weight t0 t1 unit neg
+									if {$::acaia_next_command == 12 && $event_type == 5 } {
+										# we have valid data, extract it
+										set calulated_weight [expr {$weight / pow(10.0, $unit)}]
+										set is_negative [expr {$neg > 1.0}]
+										if {$is_negative} {
+											set calulated_weight [expr {$calulated_weight * -1.0}]
+										}
+										set sensorweight $calulated_weight
+									}
+									set ::acaia_next_command 0
+								}
 							} else {
 								error "unknown scale cuuid"
 							}
diff --git a/machine.tcl b/machine.tcl
index 43587e9..75b8ae8 100644
--- a/machine.tcl
+++ b/machine.tcl
@@ -55,6 +55,8 @@ array set ::de1 {
 	cuuid_decentscale_read "0000FFF4-0000-1000-8000-00805F9B34FB"
 	cuuid_decentscale_write "000036F5-0000-1000-8000-00805F9B34FB"
 	suuid_decentscale "0000FFF0-0000-1000-8000-00805F9B34FB"
+	cuuid_acaia_ips_age "00002A80-0000-1000-8000-00805F9B34FB"
+	suuid_acaia_ips "00001820-0000-1000-8000-00805F9B34FB"
 	cinstance 0
 	fan_threshold 0
 	tank_temperature_threshold 0
-- 
2.25.1

